CREATE TYPE public.account_type AS ENUM
    ('Client', 'Employee', 'Admin');

--Table structure for table `classification`
CREATE TABLE public.classification (
	classification_id INT GENERATED BY DEFAULT AS IDENTITY, 
	classification_name CHARACTER VARYING NOT NULL,
	CONSTRAINT classification_pk PRIMARY KEY(classification_id)
);

--Table structure for table `inventory`
CREATE TABLE IF NOT EXISTS public.inventory 
(
	inv_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	inv_make character varying NOT NULL,
	inv_model character varying NOT NULL,
	inv_year character (4) NOT NULL,
	inv_description text NOT NULL,
    inv_image character varying NOT NULL, 
	inv_thumbnail character varying NOT NULL, 
	inv_price numeric(9, 0) NOT NULL,
	inv_miles integer NOT NULL,
	inv_color character varying NOT NULL,
    classification_id integer NOT NULL,
	CONSTRAINT inventory_pkey PRIMARY KEY (inv_id)	
);

--Create relationship between `classification` and `inventory` tables
ALTER TABLE IF EXISTS public.inventory 
	ADD CONSTRAINT fk_classification FOREIGN KEY (classification_id)
	REFERENCES public.classification (classification_id) MATCH SIMPLE
	ON UPDATE CASCADE 
	ON DELETE NO ACTION;

-- Table structure for table `account`
CREATE TABLE IF NOT EXISTS public.account
(
    account_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    account_firstname character varying NOT NULL,
    account_lastname character varying NOT NULL,
    account_email character varying NOT NULL,
    account_password character varying NOT NULL,
    account_type account_type NOT NULL DEFAULT 'Client'::account_type,
    CONSTRAINT account_pkey PRIMARY KEY (account_id)
);

--Data for table `classification`
INSERT INTO public.classification (classification_name)
VALUES ('Custom'),
	('Sport'),
	('Suv'),
	('Truck'),
	('Sedan');


--sql assigment 2
--#4 Update the GM Hummer description
UPDATE public.inventory
SET inv_description = REPLACE(inv_description, 'small interiors', 'a huge interior')
WHERE inv_make = 'GM' AND inv_model = 'Hummer';

-- Query 5 Use an inner join to select the make and model fields from the inventory table and 
-- the classification name field from the classification table for inventory items that belong to the "Sport" category.
SELECT inv_make, inv_model, classification_name
FROM public.inventory a
INNER JOIN public.classification b
	ON a.classification_id = b.classification_id
WHERE classification_name = 'Sport';

--#6 Update file paths in inv_thumbnail
UPDATE public.inventory
UPDATE public.inventory
SET inv_image = REPLACE(inv_image, 's/', 's/vehicles/'),
    inv_thumbnail= REPLACE(inv_thumbnail, 's/', 's/vehicles/');


